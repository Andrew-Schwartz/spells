name: Build & Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt install libxkbcommon-dev
        if: matrix.os == 'ubuntu-latest'
      - name: Build
        run: cargo b --release
      - run: |
          dir=artifact-${{ matrix.os }}
          mkdir $dir
          echo "$(cargo r --release -- TARGET)" > $dir/TARGET
          mv target/release/spells $dir/spells
        if: matrix.os != 'windows-latest'
      - run: |
          $dir="artifact-${{ matrix.os }}"
          mkdir $dir
          echo "$(cargo r --release -- TARGET)" > $dir/TARGET
          mv target/release/spells.exe $dir/spells.exe
          Invoke-WebRequest -Uri "https://github.com/electron/rcedit/releases/download/v1.1.1/rcedit-x64.exe" -OutFile "rcedit-x64.exe"
          ./rcedit-x64.exe $dir/spells.exe --set-icon resources/logo.ico
        if: matrix.os == 'windows-latest'
      - uses: actions/upload-artifact@v2.3.1
        with:
          name: artifact-${{ matrix.os }}
          path: artifact-${{ matrix.os }}
          if-no-files-found: error
        if: matrix.os != 'windows-latest'

  release:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: artifact-ubuntu-latest
      - uses: actions/download-artifact@v1
        with:
          name: artifact-macos-latest
      - uses: actions/download-artifact@v1
        with:
          name: artifact-windows-latest
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.3.2
          release_name: v1.3.2 Windows program icon set
          draft: true
          prerelease: false
      - name: Get Names
        id: names
        run: |
          echo "::set-output name=ubuntu::$(cat artifact-ubuntu-latest/TARGET)"
          echo "::set-output name=macos::$(cat artifact-macos-latest/TARGET)"
          echo "::set-output name=windows::$(cat artifact-windows-latest/TARGET)"
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifact-ubuntu-latest/spells
          asset_name: spells-${{ steps.names.outputs.ubuntu }}
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifact-macos-latest/spells
          asset_name: spells-${{ steps.names.outputs.macos }}
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifact-windows-latest/spells.exe
          asset_name: spells-${{ steps.names.outputs.windows }}.exe
          asset_content_type: application/zip
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
